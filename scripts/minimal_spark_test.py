#!/usr/bin/env python3
"""
–ê–±—Å–æ–ª—é—Ç–Ω–æ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π Spark —Ç–µ—Å—Ç - –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
"""
import sys
import logging
from pyspark.sql import SparkSession

logging.basicConfig(level=logging.INFO, format='[%(asctime)s] %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def main():
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ Spark —Ç–µ—Å—Ç–∞...")
        
        # –°–æ–∑–¥–∞–µ–º SparkSession
        spark = SparkSession.builder \
            .appName("MinimalSparkTest") \
            .getOrCreate()
        
        logger.info(f"‚úÖ Spark Session —Å–æ–∑–¥–∞–Ω–∞: {spark.version}")
        
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç
        data = [("hello", 1), ("world", 2), ("test", 3)]
        df = spark.createDataFrame(data, ["text", "number"])
        count = df.count()
        
        logger.info(f"‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω: {count} –∑–∞–ø–∏—Å–µ–π")
        df.show()
        
        spark.stop()
        logger.info("üéâ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π Spark —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")
        sys.exit(1)

if __name__ == "__main__":
    main()
